{"version":3,"sources":["Firebase.js","Home.js","FormError.js","Login.js","MeetingsList.js","Meetings.js","CheckIn.js","AttendeesList.js","Attendees.js","Register.js","Welcome.js","Navigation.js","App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","GoogleAuthProvider","Home","user","this","props","className","style","fontSize","fontWeight","to","Component","FormError","theMessage","Login","state","email","password","errorMessage","handleChange","bind","handleSubmit","e","itemName","target","name","itemValue","value","setState","registrationInfo","preventDefault","signInWithEmailAndPassword","then","navigate","catch","error","message","onSubmit","htmlFor","required","type","id","placeholder","onChange","MeetingsList","deleteMeeting","whichMeeting","database","ref","userID","remove","myMeetings","meetings","map","item","key","meetingID","role","aria-label","title","onClick","meetingName","Meeting","addMeeting","aria-describedby","length","CheckIn","displayName","push","attendeeName","atttendeeEmail","star","AttendeesList","deleteAttendee","whichAttendee","adminUser","toggleStar","undefined","set","admin","myAttendees","attendees","attendeeID","tite","href","attendeeEmail","Attendees","searchQuery","allAttendees","displayAttendees","resetQuery","chooseRandom","on","snapshot","val","attendeesList","randomAttendee","Math","floor","random","filteredAttendees","filter","toLowerCase","match","Register","passOne","passTwo","createUserWithEmailAndPassword","registerUser","Welcome","userName","logOutUser","Navigation","App","onAuthStateChanged","FBUser","updateProfile","uid","signOut","meetingsList","howManyMeetings","path","Meetings","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3417446b.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/database';\nimport 'firebase/auth';\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDIFGODpVd2lrePeiGt75LVUf0bOEyecgk\",\n  authDomain: \"builtbyboplayground.firebaseapp.com\",\n  databaseURL: \"https://builtbyboplayground.firebaseio.com\",\n  projectId: \"builtbyboplayground\",\n  storageBucket: \"builtbyboplayground.appspot.com\",\n  messagingSenderId: \"390222402869\",\n  appId: \"1:390222402869:web:556dd9c40b3812d418e87c\",\n  measurementId: \"G-5LJXBL266W\"\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nexport const provider = new firebase.auth.GoogleAuthProvider();\nexport const auth = firebase.auth();\n\nexport default firebase;","import React, { Component } from 'react';\nimport { Link } from \"@reach/router\";\n\nclass Home extends Component{\n    render() {\n        const {user} = this.props;\n        const biggerLead = {\n            fontSize : 1.4 + 'em',\n            fontWeight : 200,\n        };\n        return (\n          <div className=\"container text-center\">\n            <div className=\"row justify-content-center\">\n              <div className=\"col-10 col-md-10 col-lg-8 col-xl-7\">\n                <div className=\"display-4 text-primary mt-3 mb-2\">\n                 Meeting Manager\n                </div>\n                <p className=\"lead\" style={biggerLead}>\n                  This simple app creates meetings, allows people to check in,\n                  and picks random users to award giveaways. It's a good example\n                  of a Single Page Application which includes connection to a\n                  database and routing. It's a practical way to learn\n                  <Link to=\"https://reactjs.org/\"> React</Link> with\n                  <Link to=\"https://firebase.google.com\"> Firebase</Link>.\n                </p>\n\n                {user == null && (\n                  <>\n                    <Link\n                      to=\"/register\"\n                      className=\"btn btn-outline-primary mr-2\"\n                    >\n                      Register\n                    </Link>{\" \"}\n                    <Link to=\"/login\" className=\"btn btn-outline-primary mr-2\">\n                      Log In\n                    </Link>\n                  </>\n                )}\n                {user && (\n                  <Link to=\"/meetings\" className=\"btn btn-primary\">\n                    Meetings\n                  </Link>\n                )}\n              </div>\n              {/* <!-- columns --> */}\n            </div>\n          </div>\n        );\n    }\n}\n\nexport default Home;","import React, { Component } from 'react'\n\nclass FormError extends Component {\n    render(){\n        const { theMessage } = this.props;\n        return (\n            <div className=\"col-12 alert alert-danger px-3\">\n                {theMessage}\n            </div>\n        )\n\n    }\n}\n\nexport default FormError;\n\n","import React, { Component } from \"react\";\nimport firebase from './Firebase';\nimport FormError from './FormError';\nimport {navigate} from '@reach/router';\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: \"\",\n      password: \"\",\n      errorMessage: null\n      // names match input fields\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  handleChange(e) {\n    const itemName = e.target.name;\n    const itemValue = e.target.value;\n\n    this.setState({ [itemName]: itemValue })\n  }\n  handleSubmit(e) {\n    const registrationInfo = {\n      email: this.state.email,\n      password: this.state.password\n    };\n\n    e.preventDefault();\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(\n        registrationInfo.email,\n        registrationInfo.password\n      )\n      .then(() => {\n        navigate('/meetings')\n      })\n      .catch(error => {\n        if (error.message !== null) {\n          this.setState({ errorMessage: error.message });\n        } else {\n          this.setState({ errorMessage: null });\n        }\n      });\n  }\n\n  render() {\n    // const { user } = this.props;\n    return (\n      <form className=\"mt-3\" onSubmit={this.handleSubmit}>\n        <div className=\"container\">\n          <div className=\"row justify-content-center\">\n            <div className=\"col-lg-6\">\n              <div className=\"card bg-light\">\n                <div className=\"card-body\">\n                  <h3 className=\"font-weight-light mb-3\">Log in</h3>\n                  <section className=\"form-group\">\n                    {this.state.errorMessage !== null ? (\n                      <FormError theMessage={this.state.errorMessage} />\n                    ) : null}\n                    \n                    <label\n                      className=\"form-control-label sr-only\"\n                      htmlFor=\"Email\"\n                    >\n                      Email\n                    </label>\n                    <input\n                      required\n                      className=\"form-control\"\n                      type=\"email\"\n                      id=\"email\"\n                      name=\"email\"\n                      placeholder=\"Email\"\n                      value={this.state.email}\n                      onChange={this.handleChange}\n                    />\n                  </section>\n                  <section className=\"form-group\">\n                    <input\n                      required\n                      className=\"form-control\"\n                      type=\"password\"\n                      name=\"password\"\n                      placeholder=\"Password\"\n                      value={this.state.password}\n                      onChange={this.handleChange}\n                    />\n                  </section>\n                  <div className=\"form-group text-right mb-0\">\n                    <button className=\"btn btn-primary\" type=\"submit\">\n                      Log in\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default Login;\n","import React, { Component } from 'react'\nimport firebase from './Firebase'\nimport { FaTrash, FaCheck } from \"react-icons/fa\";\nimport { GoListUnordered } from \"react-icons/go\";\nimport { navigate } from '@reach/router'\n\n\nclass MeetingsList extends Component {\n  constructor(props) {\n    super(props);\n    this.deleteMeeting = this.deleteMeeting.bind(this);\n  }\n\n  deleteMeeting = (e, whichMeeting) => {\n    e.preventDefault();\n    const ref = firebase\n      .database()\n      .ref(`meetings/${this.props.userID}/${whichMeeting}`);\n    ref.remove();\n  }\n\n  render() {\n    const { meetings } = this.props;\n    const myMeetings = meetings.map(item => {\n      return (\n        <div className=\"list-group-item d-flex\" key={item.meetingID}>\n          <section\n            className=\"btn-group align-self-center\"\n            role=\"group\"\n            aria-label=\"Meeting Options\"\n          >\n            <button\n              className=\"btn btn-sm btn-outline-secondary\"\n              title=\"Delete Meeting\"\n              onClick={e => this.deleteMeeting(e, item.meetingID)}\n            >\n              <FaTrash />\n            </button>\n\n            <button\n              className=\"btn btn-sm btn-outline-secondary\"\n              title=\"Check In\"\n              onClick={() =>\n                navigate(`/checkin/${this.props.userID}/${this.meetingID}`)\n              }\n            >\n              <FaCheck />\n            </button>\n\n            <button\n              className=\"btn btn-sm btn-outline-secondary\"\n              title=\"Attendees List\"\n              onClick={() =>\n                navigate(`/attendees/${this.props.userID}/${this.meetingID}`)\n              }\n            >\n              <GoListUnordered />\n            </button>\n          </section>\n\n          <section className=\"pl-3 text-left align-self-center\">\n            {item.meetingName}\n          </section>\n        </div>\n      );\n    });\n\n    return <div>{myMeetings}</div>;\n  }\n}\n\nexport default MeetingsList;","import React, { Component } from \"react\";\n// import { navigate } from '@reach/router'\n\nimport MeetingsList from './MeetingsList';\nclass Meeting extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      meetingName: ''\n      // names match input fields\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  handleChange(e) {\n    const itemName = e.target.name;\n    const itemValue = e.target.value;\n\n    this.setState({ [itemName]: itemValue });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    this.props.addMeeting(this.state.meetingName);\n    this.setState({ meetingName : ''})\n  }\n\n  render() {\n    // const { user } = this.props;\n    return (\n      <div className=\"text-center mt-4\">\n      <div className=\"container mt-4\">\n        <div className=\"row justify-content-center\">\n          <div className=\"col-md-8 text-center\">\n            <h1 className=\"font-weight-light\">Add a Meeting</h1>\n            <div className=\"card bg-light\">\n              <div className=\"card-body text-center\">\n                <form className=\"formgroup\" onSubmit={this.handleSubmit}>\n                  <div className=\"input-group input-group-lg\">\n                    <input\n                      type=\"text\"\n                      className=\"form-control\"\n                      name=\"meetingName\"\n                      placeholder=\"Meeting name\"\n                      aria-describedby=\"buttonAdd\"\n                      value={this.state.meetingName}\n                      onChange={this.handleChange}\n                    />\n                    <div className=\"input-group-append\">\n                      <button\n                        type=\"submit\"\n                        className=\"btn btn-sm btn-info\"\n                        id=\"buttonAdd\"\n                      >\n                        +\n                      </button>\n                    </div>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"col-11 col-md-6 text-center\">\n            <div className=\"card border-top-0 rounded-0\">\n\n              {\n              this.props.meetings && this.props.meetings.length ? (\n                <div className=\"card-body py-2\">\n                  <h4 className=\"card-title font-weight-light m-0\">\n                    Your Meetings...\n                  </h4>\n                </div>\n              )\n              : null\n              }\n              {this.props.meetings && (\n                <div className=\"list-group list-group-flush\">\n                  <MeetingsList \n                    userID={this.props.userID}\n                    meetings={this.props.meetings} \n                  />\n                </div>\n              )\n              }\n\n            </div>\n          </div>\n        </div>\n      </div>\n     </div>\n    );\n  }\n}\n\nexport default Meeting;\n","import React, { Component } from \"react\";\nimport firebase from './Firebase';\nimport {navigate} from '@reach/router';\n\nclass CheckIn extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      displayName: '',\n      email: ''\n      \n      // names match input fields\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  handleChange(e) {\n    const itemName = e.target.name;\n    const itemValue = e.target.value;\n\n    this.setState({ [itemName]: itemValue })\n  }\n  handleSubmit(e) {\n    e.preventDefault();\n\n    const ref = firebase\n      .database()\n      .ref(`meetings/${this.props.userID}/${this.props.meetingID}/attendees`);\n      ref.push({\n        attendeeName: this.state.displayName,\n        atttendeeEmail: this.state.email,\n        star : false\n      });\n      navigate(`/attendees/${this.props.userID}/${this.props.meetingID}`)\n\n  }\n\n  render() {\n    return (\n      <form className=\"mt-3\" onSubmit={this.handleChange}>\n        <div className=\"container\">\n          <div className=\"row justify-content-center\">\n            <div className=\"col-lg-6\">\n              <div className=\"card bg-light\">\n                <div className=\"card-body\">\n                  <h3 className=\"font-weight-light mb-3\">Check in</h3>\n                  <section className=\"form-group\">\n                    <label\n                      className=\"form-control-label sr-only\"\n                      htmlFor=\"displayName\"\n                    >\n                      Name\n                    </label>\n                    <input\n                      required\n                      className=\"form-control\"\n                      type=\"text\"\n                      id=\"displayName\"\n                      name=\"displayName\"\n                      placeholder=\"Name\"\n                      value={this.state.displayName}\n                      onChange={this.handleChange}\n                    />\n                  </section>\n                  <section className=\"form-group\">\n                    <label\n                      className=\"form-control-label sr-only\"\n                      htmlFor=\"Email\"\n                    >\n                      Email\n                    </label>\n                    <input\n                      required\n                      className=\"form-control\"\n                      type=\"email\"\n                      id=\"email\"\n                      name=\"email\"\n                      placeholder=\"Email\"\n                      value={this.state.email}\n                      onChange={this.handleChange}\n                    />\n                  </section>\n                  <div className=\"form-group text-right mb-0\">\n                    <button className=\"btn btn-primary\" type=\"submit\">\n                      Check in\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default CheckIn;\n","import React, { Component } from \"react\";\nimport { GoTrashcan, GoMail, GoStar } from \"react-icons/go\";\nimport firebase from \"./Firebase\";\n\nclass AttendeesList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.deleteAttendee = this.deleteAttendee.bind(this);\n  }\n\n  deleteAttendee = (e, whichMeeting, whichAttendee) => {\n    e.preventDefault();\n    const adminUser = this.props.adminUser;\n    const ref = firebase\n      .database()\n      .ref(`meetings/${adminUser}/${whichMeeting}/attendees/${whichAttendee}`);\n    ref.remove();\n  };\n\n  toggleStar = (e, star, whichMeeting, whichAttendee) => {\n    e.preventDefault();\n    const adminUser = this.props.adminUser;\n    const ref = firebase\n      .database()\n      .ref(\n        `meetings/${adminUser}/${whichMeeting}/attendees/${whichAttendee}/star`\n      );\n\n    if (star === undefined) {\n      ref.set(true);\n    } else {\n      ref.set(!star);\n    }\n  };\n\n  render() {\n    const admin = this.props.adminUser === this.props.userID ? true : false;\n    const attendees = this.props.attendees;\n    const myAttendees = attendees.map(item => {\n      return (\n        <div\n          className=\"col-8 col-sm-6 col-md-4 col-lg-3 mb-2 p-0 px-1\"\n          key={item.attendeeID}\n        >\n          <div className=\"card \">\n            <div\n              className={\n                \"card-body px-3 py-2 d-flex align-items-center \" +\n                (admin ? \"\" : \"justify-content-center\")\n              }\n            >\n              {admin && (\n                <div className=\"btn-group pr-2\">\n                  <button\n                    className={\n                      \"btn btn-sm \" +\n                      (item.star ? \"btn-info\" : \"btn-outline-secondary\")\n                    }\n                    tite=\"Give user a star\"\n                    onClick={e =>\n                      this.toggleStar(\n                        e,\n                        item.star,\n                        this.props.meetingID,\n                        item.attendeeID\n                      )\n                    }\n                  >\n                    <GoStar />\n                  </button>\n                  <a\n                    href={`mailto:${item.attendeeEmail}`}\n                    className=\"btn btn-sm btn-outline-secondary\"\n                    title=\"Mail Attendee\"\n                  >\n                    <GoMail />\n                  </a>\n                  <button\n                    className=\"btn btn-sm btn-outline-secondary\"\n                    tite=\"Delete Attendee\"\n                    onClick={e =>\n                      this.deleteAttendee(\n                        e,\n                        this.props.meetingID,\n                        item.attendeeID\n                      )\n                    }\n                  >\n                    <GoTrashcan />\n                  </button>\n                </div>\n              )}\n\n              <div>{item.attendeeName}</div>\n            </div>\n          </div>\n        </div>\n      );\n    });\n\n    return <div className=\"row justify-content-center\">{myAttendees}</div>;\n  }\n}\n\nexport default AttendeesList;\n","import React, { Component } from 'react';\nimport firebase from './Firebase';\nimport AttendeesList from './AttendeesList';\nimport { FaUndo, FaRandom } from 'react-icons/fa';\n\nclass Attendees extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchQuery: '',\n      allAttendees: [],\n      displayAttendees: []\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.resetQuery = this.resetQuery.bind(this);\n    this.chooseRandom = this.chooseRandom.bind(this);\n  }\n\n  componentDidMount() {\n    const ref = firebase\n      .database()\n      .ref(\n        `meetings/${this.props.userID}/${\n          this.props.meetingID\n        }/attendees`\n      );\n\n    ref.on('value', snapshot => {\n      let attendees = snapshot.val();\n      let attendeesList = [];\n      for (let item in attendees) {\n        attendeesList.push({\n          attendeeID: item,\n          attendeeName: attendees[item].attendeeName,\n          attendeeEmail: attendees[item].attendeeEmail,\n          star: attendees[item].star\n        });\n      }\n      this.setState({\n        allAttendees: attendeesList,\n        displayAttendees: attendeesList\n      });\n    });\n  }\n\n  handleChange(e) {\n    const itemName = e.target.name;\n    const itemValue = e.target.value;\n\n    this.setState({ [itemName]: itemValue });\n  }\n\n  chooseRandom() {\n    const randomAttendee = Math.floor(\n      Math.random() * this.state.allAttendees.length\n    );\n    this.resetQuery();\n    this.setState({\n      displayAttendees: [this.state.allAttendees[randomAttendee]]\n    });\n  }\n\n  resetQuery() {\n    this.setState({\n      displayAttendees: this.state.allAttendees,\n      searchQuery: ''\n    });\n  }\n\n  render() {\n    const dataFilter = item => item.attendeeName.toLowerCase().match(this.state.searchQuery.toLowerCase()) && true;\n    const filteredAttendees = this.state.displayAttendees.filter(\n      dataFilter\n    );\n\n    return (\n      <div className=\"container mt-4\">\n        <div className=\"row justify-content-center\">\n          <div className=\"col-md-8\">\n            <h1 className=\"font-weight-light text-center\">\n              Attendees\n            </h1>\n\n            <div className=\"card bg-light mb-4\">\n              <div className=\"card-body text-center\">\n                <div className=\"input-group input-group-lg\">\n                  <input\n                    type=\"text\"\n                    name=\"searchQuery\"\n                    value={this.state.searchQuery}\n                    placeholder=\"Search Attendees\"\n                    className=\"form-control\"\n                    onChange={this.handleChange}\n                  />\n                  <div className=\"input-group-append\">\n                    <button\n                      className=\"btn btn-sm btn-outline-info \"\n                      title=\"Pick a random attendee\"\n                      onClick={() => this.chooseRandom()}\n                    >\n                      <FaRandom />\n                    </button>\n                    <button\n                      className=\"btn btn-sm btn-outline-info \"\n                      title=\"Reset Search\"\n                      onClick={() => this.resetQuery()}\n                    >\n                      <FaUndo />\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <AttendeesList\n          userID={this.props.userID}\n          meetingID={this.props.meetingID}\n          adminUser={this.props.adminUser}\n          attendees={filteredAttendees}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Attendees;\n","import React, { Component } from \"react\";\nimport FormError from \"./FormError\";\nimport firebase from \"./Firebase\";\n\nclass Register extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      displayName: \"\",\n      email: \"\",\n      passOne: \"\",\n      passTwo: \"\",\n      errorMessage: null\n      // names match input fields\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  handleChange(e) {\n    const itemName = e.target.name;\n    const itemValue = e.target.value;\n\n    this.setState({ [itemName]: itemValue }, () => {\n      if (this.state.passOne !== this.state.passTwo) {\n        this.setState({ errorMessage: \"Passwords do not match!\" });\n      } else {\n        this.setState({ errorMessage: null });\n      }\n    });\n  }\n  handleSubmit(e) {\n    const registrationInfo = {\n      displayName: this.state.displayName,\n      email: this.state.email,\n      password: this.state.passOne\n    };\n\n    e.preventDefault();\n    firebase\n      .auth()\n      .createUserWithEmailAndPassword(\n        registrationInfo.email,\n        registrationInfo.password\n      ).then(()=> {\n        this.props.registerUser(registrationInfo.displayName)\n      })\n      .catch(error => {\n        if (error.message !== null) {\n          this.setState({ errorMessage: error.message });\n        } else {\n          this.setState({ errorMessage: null });\n        }\n      });\n  }\n  render() {\n    // const { user } = this.props;\n    return (\n      <div className=\"text-center mt-4\">\n        <form className=\"mt-3\" onSubmit={this.handleSubmit}>\n          <div className=\"container\">\n            <div className=\"row justify-content-center\">\n              <div className=\"col-lg-8\">\n                <div className=\"card bg-light\">\n                  <div className=\"card-body\">\n                    <h3 className=\"font-weight-light mb-3\">Register</h3>\n                    <div className=\"form-row\">\n                      {this.state.errorMessage !== null ? (\n                        <FormError theMessage={this.state.errorMessage} />\n                      ) : null}\n\n                      <section className=\"col-sm-12 form-group\">\n                        <label\n                          className=\"form-control-label sr-only\"\n                          htmlFor=\"displayName\"\n                        >\n                          Display Name\n                        </label>\n                        <input\n                          className=\"form-control\"\n                          type=\"text\"\n                          id=\"displayName\"\n                          placeholder=\"Display Name\"\n                          name=\"displayName\"\n                          required\n                          value={this.state.displayName}\n                          onChange={this.handleChange}\n                        />\n                      </section>\n                    </div>\n                    <section className=\"form-group\">\n                      <label\n                        className=\"form-control-label sr-only\"\n                        htmlFor=\"email\"\n                      >\n                        Email\n                      </label>\n                      <input\n                        className=\"form-control\"\n                        type=\"email\"\n                        id=\"email\"\n                        placeholder=\"Email Address\"\n                        required\n                        name=\"email\"\n                        value={this.state.email}\n                        onChange={this.handleChange}\n                      />\n                    </section>\n                    <div className=\"form-row\">\n                      <section className=\"col-sm-6 form-group\">\n                        <input\n                          className=\"form-control\"\n                          type=\"password\"\n                          name=\"passOne\"\n                          placeholder=\"Password\"\n                          value={this.state.passOne}\n                          onChange={this.handleChange}\n                        />\n                      </section>\n                      <section className=\"col-sm-6 form-group\">\n                        <input\n                          className=\"form-control\"\n                          type=\"password\"\n                          required\n                          name=\"passTwo\"\n                          placeholder=\"Repeat Password\"\n                          value={this.state.passTwo}\n                          onChange={this.handleChange}\n                        />\n                      </section>\n                    </div>\n                    <div className=\"form-group text-right mb-0\">\n                      <button className=\"btn btn-primary\" type=\"submit\">\n                        Register\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default Register;\n","import React, { Component } from \"react\";\nimport { Link } from \"@reach/router\";\n\nclass Welcome extends Component {\n  render() {\n      const { userName, logOutUser } = this.props;\n    return (\n      <div className=\"text-center mt-4\">\n        <span className=\"text-secondary font-weight bold pl-1\">\n          Welcome {userName},\n        </span>\n        <br />\n        <Link\n          to=\"/login\"\n          className=\"text-secondary font-weight-bold pl-1\"\n          onClick={e => logOutUser(e)}\n        >\n          Log Out\n        </Link>\n      </div>\n    );\n    }\n}\n\nexport default Welcome;\n","import React, { Component } from 'react';\nimport { FaUsers } from 'react-icons/fa';\nimport { Link } from \"@reach/router\";\n\n\nclass Navigation extends Component {\n  render() {\n    const { user, logOutUser } = this.props;\n\n    return (\n      <nav className=\"site-nav family-sans navbar navbar-expand bg-dark navbar-dark higher text-bold\">\n        <div className=\"container-fluid\">\n          <Link to=\"/\" className=\"navbar-brand\">\n           <FaUsers className=\"mr-1\"/> Meeting Manager\n          </Link>\n          <div className=\"navbar-nav ml-auto\">\n            {user && (\n              <Link className=\"nav-item nav-link\" to=\"/meetings\">\n                meetings\n              </Link>\n            )}\n            {!user && (\n              <>\n                <Link className=\"nav-item nav-link\" to=\"/login\">\n                  log in\n                </Link>\n                <Link className=\"nav-item nav-link\" to=\"/register\">\n                  register\n                </Link>\n              </>\n            )}\n            {user && (\n                <Link \n                  className=\"nav-item nav-link\"\n                  to=\"/login\"\n                  onClick={e => logOutUser(e)}\n                >\n                log out\n                </Link>\n            )}\n          </div>\n        </div>\n      </nav>\n    );\n  }\n}\n\nexport default Navigation;\n","import React, { Component } from 'react';\nimport { Router, navigate } from \"@reach/router\";\nimport firebase from './Firebase';\n\n// Styles\nimport './App.css';\n\n// Pages\nimport Home from \"./Home\";\nimport Login from \"./Login\";\nimport Meetings from \"./Meetings\";\nimport CheckIn from \"./CheckIn\";\nimport Attendees from \"./Attendees\";\nimport Register from \"./Register\";\nimport Welcome from './Welcome';\nimport Navigation from './Navigation';\n\n\nclass App extends Component {\n  constructor(){\n    super()\n      this.state = {\n        user: null,\n        displayName: null,\n        userID: null\n      }\n    \n  }\n\n  componentDidMount(){\n      firebase.auth().onAuthStateChanged(FBUser => {\n        if (FBUser) {\n          this.setState({\n            user: FBUser,\n            displayName: FBUser.displayName,\n            userID: FBUser.uid\n          })\n\n        const meetingsRef = firebase\n          .database()\n          .ref('meetings/'+ FBUser.uid);\n\n          meetingsRef.on('value', snapshot => {\n            let meetings = snapshot.val();\n            let meetingsList = [];\n\n            for (let item in meetings) {\n              meetingsList.push({\n                meetingID: item,\n                meetingName: meetings[item].meetingName\n              });\n            }\n\n            this.setState({\n              meetings: meetingsList,\n              howManyMeetings: meetingsList.length\n            });\n\n          })\n        } \n        else {\n          this.setState({ user : null });\n        }\n      });\n\n\n  }\n\n  registerUser = userName => {\n    firebase.auth().onAuthStateChanged(FBUser => {\n      FBUser.updateProfile({\n        displayName: userName\n      }).then( ()=> {\n          this.setState({\n            user: FBUser,\n            displayName: FBUser.displayName,\n            userID: FBUser.uid\n          });\n          navigate('/meetings')\n      })\n    })\n  }\n  \n  logOutUser = e => {\n    e.preventDefault();\n    \n    this.setState({\n      displayName : null,\n      userID: null,\n      user: null\n    });\n\n    firebase\n      .auth()\n      .signOut()\n      .then( () => {\n        navigate('/login')\n      });\n  };\n\n  addMeeting = meetingName => {\n    const ref = firebase\n      .database().ref(`meetings/${this.state.user.uid}`);\n    ref.push({ meetingName : meetingName });\n  };\n\n  render() {\n    return (\n      <>\n        <Navigation user={this.state.user} logOutUser={this.logOutUser} />\n        {this.state.user && (\n          <Welcome\n            userName={this.state.displayName}\n            logOutUser={this.logOutUser}\n          />\n        )}\n        <Router>\n          <Home path=\"/\" user={this.state.user} />\n          <Login path=\"/login\" />\n          <Meetings \n            path=\"/meetings\"\n            meetings={this.state.meetings}\n            addMeeting={this.addMeeting} \n            userID={this.state.userID}  \n          />\n          <Attendees \n            path=\"/attendees/:userID/:meetingID\"\n            userID={this.state.userID}  \n          />\n          <CheckIn path=\"/checkin/:userID/:meetingID\" />\n          \n          <Register path=\"/register\" registerUser={this.registerUser} />\n        </Router>\n      </>\n    );\n  };\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}